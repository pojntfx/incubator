{"id":"../node_modules/markmap/lib/d3-flextree.js","dependencies":[{"name":"/var/home/pojntfx/Projects/incubator/packages/html-visualizer/package.json","includedInParent":true,"mtime":1555234933789},{"name":"/var/home/pojntfx/Projects/incubator/.babelrc","includedInParent":true,"mtime":1555171676277},{"name":"/var/home/pojntfx/Projects/incubator/packages/html-visualizer/node_modules/markmap/package.json","includedInParent":true,"mtime":1555172052077},{"name":"d3","loc":{"line":9,"column":41},"parent":"/var/home/pojntfx/Projects/incubator/packages/html-visualizer/node_modules/markmap/lib/d3-flextree.js","resolved":"/var/home/pojntfx/Projects/incubator/packages/html-visualizer/node_modules/d3/d3.js"}],"generated":{"js":"var define;\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['d3'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('d3'));\n    } else {\n        // Browser globals (root is window)\n        root.markmap = factory(root.d3);\n    }\n}(this, function (d3) {\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm,\n// as improved by A.J. van der Ploeg, 2013, \"Drawing Non-layered Tidy\n// Trees in Linear Time\".\nd3.layout.flextree = function() {\n  var hierarchy = d3.layout.hierarchy().sort(null).value(null);\n\n  // The spacing between nodes can be specified in one of two ways:\n  // - separation - returns center-to-center distance\n  //   in units of root-node-x-size\n  // - spacing - returns edge-to-edge distance in the same units as\n  //   node sizes\n  var separation = d3_layout_treeSeparation,\n      spacing = null,\n      size = [1, 1],    // x_size, y_size\n      nodeSize = null,\n      setNodeSizes = false;\n\n  // This stores the x_size of the root node, for use with the spacing \n  // function\n  var wroot = null;\n\n  // The main layout function:\n  function tree(d, i) {\n    var nodes = hierarchy.call(this, d, i),\n        t = nodes[0],\n        wt = wrapTree(t);\n\n    wroot = wt;\n    zerothWalk(wt, 0);\n    firstWalk(wt);\n    secondWalk(wt, 0);\n    renormalize(wt);\n\n    return nodes;\n  }\n\n  // Every node in the tree is wrapped in an object that holds data\n  // used during the algorithm\n  function wrapTree(t) {\n    var wt = {\n      t: t,\n      prelim: 0,\n      mod: 0, \n      shift: 0, \n      change: 0,\n      msel: 0,\n      mser: 0,\n    };\n    t.x = 0;\n    t.y = 0;\n    if (size) {\n      wt.x_size = 1;\n      wt.y_size = 1;\n    }\n    else if (typeof nodeSize == \"object\") {  // fixed array\n      wt.x_size = nodeSize[0];\n      wt.y_size = nodeSize[1];\n    }\n    else {  // use nodeSize function\n      var ns = nodeSize(t);\n      wt.x_size = ns[0];\n      wt.y_size = ns[1];\n    }\n    if (setNodeSizes) {\n      t.x_size = wt.x_size;\n      t.y_size = wt.y_size;\n    }\n\n    var children = [];\n    var num_children = t.children ? t.children.length : 0;\n    for (var i = 0; i < num_children; ++i) {\n      children.push(wrapTree(t.children[i]));\n    }\n    wt.children = children;\n    wt.num_children = num_children;\n\n    return wt;\n  }\n\n  // Recursively set the y coordinate of the children, based on\n  // the y coordinate of the parent, and its height. Also set parent \n  // and depth.\n  function zerothWalk(wt, initial) {\n    wt.t.y = initial;\n    wt.t.depth = 0;\n    _zerothWalk(wt);\n  }\n  \n  function _zerothWalk(wt) {\n    var kid_y = wt.t.y + wt.y_size,\n        kid_depth = wt.t.depth + 1,\n        i;\n    for (i = 0; i < wt.children.length; ++i) {\n      var kid = wt.children[i];\n      kid.t.y = kid_y;\n      kid.t.parent = wt.t;\n      kid.t.depth = kid_depth;\n      _zerothWalk(wt.children[i]);\n    }\n  }\n\n  function firstWalk(wt) {\n    if (wt.num_children == 0) {\n      setExtremes(wt);\n      return;\n    }\n    firstWalk(wt.children[0]);\n\n    var ih = updateIYL(bottom(wt.children[0].el), 0, null);\n\n    for (var i = 1; i < wt.num_children; ++i) {\n      firstWalk(wt.children[i]);\n\n      // Store lowest vertical coordinate while extreme nodes still point \n      // in current subtree.\n      var minY = bottom(wt.children[i].er);                                \n      separate(wt, i, ih);\n      ih = updateIYL(minY, i, ih);                                     \n    }\n    positionRoot(wt);\n    setExtremes(wt);\n  }\n\n  function setExtremes(wt) {\n    if (wt.num_children == 0) {\n      wt.el = wt;\n      wt.er = wt;\n      wt.msel = wt.mser = 0;\n    }\n    else {\n      wt.el = wt.children[0].el; \n      wt.msel = wt.children[0].msel;\n      wt.er = wt.children[wt.num_children - 1].er; \n      wt.mser = wt.children[wt.num_children - 1].mser;\n    }\n  }\n\n  function separate(wt, i, ih) {\n    // Right contour node of left siblings and its sum of modifiers.  \n    var sr = wt.children[i-1]; \n    var mssr = sr.mod;\n   \n    // Left contour node of current subtree and its sum of modifiers.  \n    var cl = wt.children[i]; \n    var mscl = cl.mod;\n   \n    while (sr != null && cl != null) {\n      if (bottom(sr) > ih.lowY) ih = ih.nxt;\n    \n      // How far to the left of the right side of sr is the left side \n      // of cl? First compute the center-to-center distance, then add \n      // the \"gap\" (separation or spacing)\n      var dist = (mssr + sr.prelim) - (mscl + cl.prelim);\n      if (separation != null) {\n        dist += separation(sr.t, cl.t) * wroot.x_size;\n      }\n      else if (spacing != null) {\n        dist += sr.x_size/2 + cl.x_size/2 + spacing(sr.t, cl.t);\n      }\n      if (dist > 0) {\n        mscl += dist;\n        moveSubtree(wt, i, ih.index, dist);\n      }\n\n      // Fix for layout bug, https://github.com/Klortho/d3-flextree/issues/1,\n      // HT @lianyi\n      else if ( i === 1 && mscl === 0 && \n                sr.num_children === 0 && cl.num_children > 1 && dist < 0 ) {\n        mscl += dist;\n        moveSubtree(wt, i, ih.index, dist);\n      }\n\n      var sy = bottom(sr), \n          cy = bottom(cl);\n    \n      // Advance highest node(s) and sum(s) of modifiers  \n      if (sy <= cy) {                                                    \n        sr = nextRightContour(sr);\n        if (sr != null) mssr += sr.mod;\n      }                                                               \n      if (sy >= cy) {                                           \n        cl = nextLeftContour(cl);\n        if (cl != null) mscl += cl.mod;\n      }\n    }\n\n    // Set threads and update extreme nodes. In the first case, the \n    // current subtree must be taller than the left siblings.  \n    if (sr == null && cl != null) setLeftThread(wt, i, cl, mscl);\n    \n    // In this case, the left siblings must be taller than the current \n    // subtree.  \n    else if (sr != null && cl == null) setRightThread(wt, i, sr, mssr);\n  }\n\n  function moveSubtree(wt, i, si, dist) {\n    // Move subtree by changing mod.  \n    wt.children[i].mod += dist; \n    wt.children[i].msel += dist; \n    wt.children[i].mser += dist;\n    distributeExtra(wt, i, si, dist);                                  \n  }\n\n  function nextLeftContour(wt) {\n    return wt.num_children == 0 ? wt.tl : wt.children[0];\n  }\n    \n  function nextRightContour(wt) {\n    return wt.num_children == 0 ? \n      wt.tr : wt.children[wt.num_children - 1];\n  }\n    \n  function bottom(wt) { \n    return wt.t.y + wt.y_size; \n  }\n  \n  function setLeftThread(wt, i, cl, modsumcl) {\n    var li = wt.children[0].el;\n    li.tl = cl;\n   \n    // Change mod so that the sum of modifier after following thread \n    // is correct.  \n    var diff = (modsumcl - cl.mod) - wt.children[0].msel;\n    li.mod += diff; \n   \n    // Change preliminary x coordinate so that the node does not move.  \n    li.prelim -= diff;\n   \n    // Update extreme node and its sum of modifiers.  \n    wt.children[0].el = wt.children[i].el; \n    wt.children[0].msel = wt.children[i].msel;\n  }\n    \n  // Symmetrical to setLeftThread.  \n  function setRightThread(wt, i, sr, modsumsr) {\n    var ri = wt.children[i].er;\n    ri.tr = sr;\n    var diff = (modsumsr - sr.mod) - wt.children[i].mser;\n    ri.mod += diff; \n    ri.prelim -= diff;\n    wt.children[i].er = wt.children[i - 1].er; \n    wt.children[i].mser = wt.children[i - 1].mser;\n  }\n\n  // Position root between children, taking into account their mod.  \n  function positionRoot(wt) {\n    wt.prelim = ( wt.children[0].prelim + \n                  wt.children[0].mod -\n                  wt.children[0].x_size/2 +\n                  wt.children[wt.num_children - 1].mod + \n                  wt.children[wt.num_children - 1].prelim +\n                  wt.children[wt.num_children - 1].x_size/2) / 2;\n  }\n\n  function secondWalk(wt, modsum) {\n    modsum += wt.mod;\n    // Set absolute (non-relative) horizontal coordinate.  \n    wt.t.x = wt.prelim + modsum;\n    addChildSpacing(wt);                                               \n    for (var i = 0; i < wt.num_children; i++) \n      secondWalk(wt.children[i], modsum);\n  }\n\n  function distributeExtra(wt, i, si, dist) {\n    // Are there intermediate children?\n    if (si != i - 1) {                                                    \n      var nr = i - si;                                            \n      wt.children[si + 1].shift += dist / nr;                                     \n      wt.children[i].shift -= dist / nr;                                         \n      wt.children[i].change -= dist - dist / nr;                                 \n    }                                                                 \n  }                                                                    \n   \n  // Process change and shift to add intermediate spacing to mod.  \n  function addChildSpacing(wt) {\n    var d = 0, modsumdelta = 0;                                    \n    for (var i = 0; i < wt.num_children; i++) {                                  \n      d += wt.children[i].shift;                                               \n      modsumdelta += d + wt.children[i].change;                                \n      wt.children[i].mod += modsumdelta;                                       \n    }                                                                 \n  }                                                                    \n\n  // Make/maintain a linked list of the indexes of left siblings and their \n  // lowest vertical coordinate.  \n  function updateIYL(minY, i, ih) {\n    // Remove siblings that are hidden by the new subtree.  \n    while (ih != null && minY >= ih.lowY) ih = ih.nxt;                 \n    // Prepend the new subtree.  \n    return {\n      lowY: minY, \n      index: i, \n      nxt: ih,\n    };                                       \n  }         \n\n  // Renormalize the coordinates\n  function renormalize(wt) {\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    if (size != null) {\n      var left = wt,\n          right = wt,\n          bottom = wt;\n      var toVisit = [wt],\n          node;\n      while (node = toVisit.pop()) {\n        var t = node.t;\n        if (t.x < left.t.x) left = node;\n        if (t.x > right.t.x) right = node;\n        if (t.depth > bottom.t.depth) bottom = node;\n        if (node.children) \n          toVisit = toVisit.concat(node.children);\n      }\n\n      var sep = separation == null ? 0.5 : separation(left.t, right.t)/2;\n      var tx = sep - left.t.x;\n      var kx = size[0] / (right.t.x + sep + tx);\n      var ky = size[1] / (bottom.t.depth > 0 ? bottom.t.depth : 1);\n\n      toVisit = [wt];\n      while (node = toVisit.pop()) {\n        var t = node.t;\n        t.x = (t.x + tx) * kx;\n        t.y = t.depth * ky;\n        if (setNodeSizes) {\n          t.x_size *= kx;\n          t.y_size *= ky;\n        }\n        if (node.children) \n          toVisit = toVisit.concat(node.children);\n      }\n    }\n\n    // Else either a fixed node size, or node size function was specified.\n    // In this case, we translate such that the root node is at x = 0.\n    else {\n      var rootX = wt.t.x;\n      moveRight(wt, -rootX);\n    }\n  }\n\n  function moveRight(wt, move) {\n    wt.t.x += move;\n    for (var i = 0; i < wt.num_children; ++i) {\n      moveRight(wt.children[i], move);\n    }\n  }\n\n  // Setter and getter methods\n\n  tree.separation = function(x) {\n    if (!arguments.length) return separation;\n    separation = x;\n    spacing = null;\n    return tree;\n  };\n\n  tree.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    spacing = x;\n    separation = null;\n    return tree;\n  }\n\n  tree.size = function(x) {\n    if (!arguments.length) return size;\n    size = x;\n    nodeSize = null;\n    return tree;\n  };\n\n  tree.nodeSize = function(x) {\n    if (!arguments.length) return nodeSize;\n    nodeSize = x;\n    size = null;\n    return tree;\n  };\n\n  tree.setNodeSizes = function(x) {\n    if (!arguments.length) return setNodeSizes;\n    setNodeSizes = x;\n    return tree;\n  };\n\n  tree.rootXSize = function() {\n    return wroot ? wroot.x_size : null;\n  }\n\n  return d3_layout_hierarchyRebind(tree, hierarchy);\n};\n\nfunction d3_layout_treeSeparation(a, b) {\n  return a.parent == b.parent ? 1 : 2;\n}\nfunction d3_layout_hierarchyRebind(object, hierarchy) {\n  d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\n  // Add an alias for nodes and links, for convenience.\n  object.nodes = object;\n  object.links = d3_layout_hierarchyLinks;\n\n  return object;\n}\nfunction d3_layout_hierarchyLinks(nodes) {\n  return d3.merge(nodes.map(function(parent) {\n    return (parent.children || []).map(function(child) {\n      return {source: parent, target: child};\n    });\n  }));\n}\n\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/markmap/lib/d3-flextree.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}}],"sources":{"../node_modules/markmap/lib/d3-flextree.js":"(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['d3'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory(require('d3'));\n    } else {\n        // Browser globals (root is window)\n        root.markmap = factory(root.d3);\n    }\n}(this, function (d3) {\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm,\n// as improved by A.J. van der Ploeg, 2013, \"Drawing Non-layered Tidy\n// Trees in Linear Time\".\nd3.layout.flextree = function() {\n  var hierarchy = d3.layout.hierarchy().sort(null).value(null);\n\n  // The spacing between nodes can be specified in one of two ways:\n  // - separation - returns center-to-center distance\n  //   in units of root-node-x-size\n  // - spacing - returns edge-to-edge distance in the same units as\n  //   node sizes\n  var separation = d3_layout_treeSeparation,\n      spacing = null,\n      size = [1, 1],    // x_size, y_size\n      nodeSize = null,\n      setNodeSizes = false;\n\n  // This stores the x_size of the root node, for use with the spacing \n  // function\n  var wroot = null;\n\n  // The main layout function:\n  function tree(d, i) {\n    var nodes = hierarchy.call(this, d, i),\n        t = nodes[0],\n        wt = wrapTree(t);\n\n    wroot = wt;\n    zerothWalk(wt, 0);\n    firstWalk(wt);\n    secondWalk(wt, 0);\n    renormalize(wt);\n\n    return nodes;\n  }\n\n  // Every node in the tree is wrapped in an object that holds data\n  // used during the algorithm\n  function wrapTree(t) {\n    var wt = {\n      t: t,\n      prelim: 0,\n      mod: 0, \n      shift: 0, \n      change: 0,\n      msel: 0,\n      mser: 0,\n    };\n    t.x = 0;\n    t.y = 0;\n    if (size) {\n      wt.x_size = 1;\n      wt.y_size = 1;\n    }\n    else if (typeof nodeSize == \"object\") {  // fixed array\n      wt.x_size = nodeSize[0];\n      wt.y_size = nodeSize[1];\n    }\n    else {  // use nodeSize function\n      var ns = nodeSize(t);\n      wt.x_size = ns[0];\n      wt.y_size = ns[1];\n    }\n    if (setNodeSizes) {\n      t.x_size = wt.x_size;\n      t.y_size = wt.y_size;\n    }\n\n    var children = [];\n    var num_children = t.children ? t.children.length : 0;\n    for (var i = 0; i < num_children; ++i) {\n      children.push(wrapTree(t.children[i]));\n    }\n    wt.children = children;\n    wt.num_children = num_children;\n\n    return wt;\n  }\n\n  // Recursively set the y coordinate of the children, based on\n  // the y coordinate of the parent, and its height. Also set parent \n  // and depth.\n  function zerothWalk(wt, initial) {\n    wt.t.y = initial;\n    wt.t.depth = 0;\n    _zerothWalk(wt);\n  }\n  \n  function _zerothWalk(wt) {\n    var kid_y = wt.t.y + wt.y_size,\n        kid_depth = wt.t.depth + 1,\n        i;\n    for (i = 0; i < wt.children.length; ++i) {\n      var kid = wt.children[i];\n      kid.t.y = kid_y;\n      kid.t.parent = wt.t;\n      kid.t.depth = kid_depth;\n      _zerothWalk(wt.children[i]);\n    }\n  }\n\n  function firstWalk(wt) {\n    if (wt.num_children == 0) {\n      setExtremes(wt);\n      return;\n    }\n    firstWalk(wt.children[0]);\n\n    var ih = updateIYL(bottom(wt.children[0].el), 0, null);\n\n    for (var i = 1; i < wt.num_children; ++i) {\n      firstWalk(wt.children[i]);\n\n      // Store lowest vertical coordinate while extreme nodes still point \n      // in current subtree.\n      var minY = bottom(wt.children[i].er);                                \n      separate(wt, i, ih);\n      ih = updateIYL(minY, i, ih);                                     \n    }\n    positionRoot(wt);\n    setExtremes(wt);\n  }\n\n  function setExtremes(wt) {\n    if (wt.num_children == 0) {\n      wt.el = wt;\n      wt.er = wt;\n      wt.msel = wt.mser = 0;\n    }\n    else {\n      wt.el = wt.children[0].el; \n      wt.msel = wt.children[0].msel;\n      wt.er = wt.children[wt.num_children - 1].er; \n      wt.mser = wt.children[wt.num_children - 1].mser;\n    }\n  }\n\n  function separate(wt, i, ih) {\n    // Right contour node of left siblings and its sum of modifiers.  \n    var sr = wt.children[i-1]; \n    var mssr = sr.mod;\n   \n    // Left contour node of current subtree and its sum of modifiers.  \n    var cl = wt.children[i]; \n    var mscl = cl.mod;\n   \n    while (sr != null && cl != null) {\n      if (bottom(sr) > ih.lowY) ih = ih.nxt;\n    \n      // How far to the left of the right side of sr is the left side \n      // of cl? First compute the center-to-center distance, then add \n      // the \"gap\" (separation or spacing)\n      var dist = (mssr + sr.prelim) - (mscl + cl.prelim);\n      if (separation != null) {\n        dist += separation(sr.t, cl.t) * wroot.x_size;\n      }\n      else if (spacing != null) {\n        dist += sr.x_size/2 + cl.x_size/2 + spacing(sr.t, cl.t);\n      }\n      if (dist > 0) {\n        mscl += dist;\n        moveSubtree(wt, i, ih.index, dist);\n      }\n\n      // Fix for layout bug, https://github.com/Klortho/d3-flextree/issues/1,\n      // HT @lianyi\n      else if ( i === 1 && mscl === 0 && \n                sr.num_children === 0 && cl.num_children > 1 && dist < 0 ) {\n        mscl += dist;\n        moveSubtree(wt, i, ih.index, dist);\n      }\n\n      var sy = bottom(sr), \n          cy = bottom(cl);\n    \n      // Advance highest node(s) and sum(s) of modifiers  \n      if (sy <= cy) {                                                    \n        sr = nextRightContour(sr);\n        if (sr != null) mssr += sr.mod;\n      }                                                               \n      if (sy >= cy) {                                           \n        cl = nextLeftContour(cl);\n        if (cl != null) mscl += cl.mod;\n      }\n    }\n\n    // Set threads and update extreme nodes. In the first case, the \n    // current subtree must be taller than the left siblings.  \n    if (sr == null && cl != null) setLeftThread(wt, i, cl, mscl);\n    \n    // In this case, the left siblings must be taller than the current \n    // subtree.  \n    else if (sr != null && cl == null) setRightThread(wt, i, sr, mssr);\n  }\n\n  function moveSubtree(wt, i, si, dist) {\n    // Move subtree by changing mod.  \n    wt.children[i].mod += dist; \n    wt.children[i].msel += dist; \n    wt.children[i].mser += dist;\n    distributeExtra(wt, i, si, dist);                                  \n  }\n\n  function nextLeftContour(wt) {\n    return wt.num_children == 0 ? wt.tl : wt.children[0];\n  }\n    \n  function nextRightContour(wt) {\n    return wt.num_children == 0 ? \n      wt.tr : wt.children[wt.num_children - 1];\n  }\n    \n  function bottom(wt) { \n    return wt.t.y + wt.y_size; \n  }\n  \n  function setLeftThread(wt, i, cl, modsumcl) {\n    var li = wt.children[0].el;\n    li.tl = cl;\n   \n    // Change mod so that the sum of modifier after following thread \n    // is correct.  \n    var diff = (modsumcl - cl.mod) - wt.children[0].msel;\n    li.mod += diff; \n   \n    // Change preliminary x coordinate so that the node does not move.  \n    li.prelim -= diff;\n   \n    // Update extreme node and its sum of modifiers.  \n    wt.children[0].el = wt.children[i].el; \n    wt.children[0].msel = wt.children[i].msel;\n  }\n    \n  // Symmetrical to setLeftThread.  \n  function setRightThread(wt, i, sr, modsumsr) {\n    var ri = wt.children[i].er;\n    ri.tr = sr;\n    var diff = (modsumsr - sr.mod) - wt.children[i].mser;\n    ri.mod += diff; \n    ri.prelim -= diff;\n    wt.children[i].er = wt.children[i - 1].er; \n    wt.children[i].mser = wt.children[i - 1].mser;\n  }\n\n  // Position root between children, taking into account their mod.  \n  function positionRoot(wt) {\n    wt.prelim = ( wt.children[0].prelim + \n                  wt.children[0].mod -\n                  wt.children[0].x_size/2 +\n                  wt.children[wt.num_children - 1].mod + \n                  wt.children[wt.num_children - 1].prelim +\n                  wt.children[wt.num_children - 1].x_size/2) / 2;\n  }\n\n  function secondWalk(wt, modsum) {\n    modsum += wt.mod;\n    // Set absolute (non-relative) horizontal coordinate.  \n    wt.t.x = wt.prelim + modsum;\n    addChildSpacing(wt);                                               \n    for (var i = 0; i < wt.num_children; i++) \n      secondWalk(wt.children[i], modsum);\n  }\n\n  function distributeExtra(wt, i, si, dist) {\n    // Are there intermediate children?\n    if (si != i - 1) {                                                    \n      var nr = i - si;                                            \n      wt.children[si + 1].shift += dist / nr;                                     \n      wt.children[i].shift -= dist / nr;                                         \n      wt.children[i].change -= dist - dist / nr;                                 \n    }                                                                 \n  }                                                                    \n   \n  // Process change and shift to add intermediate spacing to mod.  \n  function addChildSpacing(wt) {\n    var d = 0, modsumdelta = 0;                                    \n    for (var i = 0; i < wt.num_children; i++) {                                  \n      d += wt.children[i].shift;                                               \n      modsumdelta += d + wt.children[i].change;                                \n      wt.children[i].mod += modsumdelta;                                       \n    }                                                                 \n  }                                                                    \n\n  // Make/maintain a linked list of the indexes of left siblings and their \n  // lowest vertical coordinate.  \n  function updateIYL(minY, i, ih) {\n    // Remove siblings that are hidden by the new subtree.  \n    while (ih != null && minY >= ih.lowY) ih = ih.nxt;                 \n    // Prepend the new subtree.  \n    return {\n      lowY: minY, \n      index: i, \n      nxt: ih,\n    };                                       \n  }         \n\n  // Renormalize the coordinates\n  function renormalize(wt) {\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    if (size != null) {\n      var left = wt,\n          right = wt,\n          bottom = wt;\n      var toVisit = [wt],\n          node;\n      while (node = toVisit.pop()) {\n        var t = node.t;\n        if (t.x < left.t.x) left = node;\n        if (t.x > right.t.x) right = node;\n        if (t.depth > bottom.t.depth) bottom = node;\n        if (node.children) \n          toVisit = toVisit.concat(node.children);\n      }\n\n      var sep = separation == null ? 0.5 : separation(left.t, right.t)/2;\n      var tx = sep - left.t.x;\n      var kx = size[0] / (right.t.x + sep + tx);\n      var ky = size[1] / (bottom.t.depth > 0 ? bottom.t.depth : 1);\n\n      toVisit = [wt];\n      while (node = toVisit.pop()) {\n        var t = node.t;\n        t.x = (t.x + tx) * kx;\n        t.y = t.depth * ky;\n        if (setNodeSizes) {\n          t.x_size *= kx;\n          t.y_size *= ky;\n        }\n        if (node.children) \n          toVisit = toVisit.concat(node.children);\n      }\n    }\n\n    // Else either a fixed node size, or node size function was specified.\n    // In this case, we translate such that the root node is at x = 0.\n    else {\n      var rootX = wt.t.x;\n      moveRight(wt, -rootX);\n    }\n  }\n\n  function moveRight(wt, move) {\n    wt.t.x += move;\n    for (var i = 0; i < wt.num_children; ++i) {\n      moveRight(wt.children[i], move);\n    }\n  }\n\n  // Setter and getter methods\n\n  tree.separation = function(x) {\n    if (!arguments.length) return separation;\n    separation = x;\n    spacing = null;\n    return tree;\n  };\n\n  tree.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    spacing = x;\n    separation = null;\n    return tree;\n  }\n\n  tree.size = function(x) {\n    if (!arguments.length) return size;\n    size = x;\n    nodeSize = null;\n    return tree;\n  };\n\n  tree.nodeSize = function(x) {\n    if (!arguments.length) return nodeSize;\n    nodeSize = x;\n    size = null;\n    return tree;\n  };\n\n  tree.setNodeSizes = function(x) {\n    if (!arguments.length) return setNodeSizes;\n    setNodeSizes = x;\n    return tree;\n  };\n\n  tree.rootXSize = function() {\n    return wroot ? wroot.x_size : null;\n  }\n\n  return d3_layout_hierarchyRebind(tree, hierarchy);\n};\n\nfunction d3_layout_treeSeparation(a, b) {\n  return a.parent == b.parent ? 1 : 2;\n}\nfunction d3_layout_hierarchyRebind(object, hierarchy) {\n  d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\n  // Add an alias for nodes and links, for convenience.\n  object.nodes = object;\n  object.links = d3_layout_hierarchyLinks;\n\n  return object;\n}\nfunction d3_layout_hierarchyLinks(nodes) {\n  return d3.merge(nodes.map(function(parent) {\n    return (parent.children || []).map(function(child) {\n      return {source: parent, target: child};\n    });\n  }));\n}\n\n\n}));\n"},"lineCount":432}},"error":null,"hash":"2ff0e18312f155aaf2181d599ccc65f3","cacheData":{"env":{}}}